{"ast":null,"code":"import * as api from '../api';\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: \"START_LOADING\"\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n    dispatch({\n      type: \"END_LOADING\"\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: \"START_LOADING\"\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    console.log(data);\n    dispatch({\n      type: 'FETCH_BY_SEARCH',\n      payload: data\n    });\n    dispatch({\n      type: \"END_LOADING\"\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: \"START_LOADING\"\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n    dispatch({\n      type: \"END_LOADING\"\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: 'DELETE',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","getPosts","page","dispatch","type","data","fetchPosts","console","log","payload","error","message","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","likePost"],"sources":["C:/Users/athar/jnp/sm/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api';\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({type: \"START_LOADING\"});\r\n        const  { data } = await api.fetchPosts(page);\r\n        console.log(data)\r\n        dispatch({type: 'FETCH_ALL',payload: data })\r\n        dispatch({type: \"END_LOADING\"});\r\n\r\n    } catch (error) {\r\n        console.log(error.message)   \r\n    }\r\n\r\n} \r\n\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: \"START_LOADING\"});\r\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\r\n        console.log(data)\r\n        dispatch({type: 'FETCH_BY_SEARCH',payload: data })\r\n        dispatch({type: \"END_LOADING\"});\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({type: \"START_LOADING\"});\r\n        const { data } = await api.createPost(post);\r\n        dispatch({type: 'CREATE',payload: data });\r\n        dispatch({type: \"END_LOADING\"});\r\n\r\n    } catch (error) {\r\n        console.log(error.message);\r\n\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id,post);\r\n        dispatch({type: 'UPDATE',payload: data });\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n        dispatch({type :'DELETE',payload:id})\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n} \r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id);\r\n        dispatch({type:'UPDATE',payload:data})\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}